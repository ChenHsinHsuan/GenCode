package <<PackageName>>.model.condition;

import <<PackageName>>.model.base.<<ObjectName>>Base;
import java.util.Hashtable;
import java.util.ArrayList;

/**
 * <<ObjectName>>Model List物件(<<TableName>>)
 * @author <<Author>>
 */
public class <<ObjectName>>Condition extends <<ObjectName>>Base {  	
  	private static final long serialVersionUID = 995783700932170182L;
  	
   	public <<ObjectName>>Condition() {
        
    }

    public <<ObjectName>>Condition(Hashtable i_data) {
        super(i_data);
    }
  	
  	// ###分頁使用#############################################
  	
	public String getStartCount() {
		return getValue("startcount");
	}

	public void setStartCount(String i_val) {
		setValue("startcount", i_val);
	}

	public String getEndCount() {
		return getValue("endcount");
	}

	public void setEndCount(String i_val) {
		setValue("endcount", i_val);
	}

	public String getCurrentPage() {
		return getValue("currentpage");
	}

	public void setCurrentPage(String i_val) {
		setValue("currentpage", i_val);
	}
	
	public String getPageSize() {
		return getValue("pagesize");
	}

	public void setPageSize(String i_val) {
		setValue("pagesize", i_val);
	}

	// ###日期區間#############################################
	<<SearhDateField>>

	//主機時間(年月日時共十位)
	public String getServerTime() {
		return getValue("servertime");
	}
	
	public void setServerTime(String i_val) {
		setValue("servertime", i_val);
	}
	
	// ###查詢陣列條件#############################################
	<<SearhArrayField>>
	
	// ###排序欄位設定#############################################
	
	private ArrayList<String> orderByList = new ArrayList<String>();
	
	public ArrayList<String> getOrderByList() {
		return orderByList;
	}

	public void setOrderByList(ArrayList<String> orderByList) {
		this.orderByList = orderByList;
	}

	/**
	 * Order by field(僅自動產生前十個欄位)
	 */
	<<OrderByField>>
	
	// ###自訂欄位(僅自動產生前十個欄位)#############################################
	
	//Like-field like '%'+fieldCond+'%'
	//LikeIgnCase-UPPER(field) like '%'+UPPER(fieldCond)+'%'
	//IgnCase-UPPER(field) = UPPER(fieldCond)
	//IsNotEmpty-(field is not null and field <![CDATA[ <> ]]> '')
	//IsEmpty-(field is null or field = '')
	<<CusSearhField>>
}