//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.20 at 03:27:09 下午 TST 
//


package com.fpg.ec.codegen.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.fpg.ec.codegen.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _CreateModel_QNAME = new QName("", "CreateModel");
    private final static QName _Type_QNAME = new QName("", "Type");
    private final static QName _Pwd_QNAME = new QName("", "Pwd");
    private final static QName _Author_QNAME = new QName("", "Author");
    private final static QName _CreateBo_QNAME = new QName("", "CreateBo");
    private final static QName _CreateDao_QNAME = new QName("", "CreateDao");
    private final static QName _Module_QNAME = new QName("", "Module");
    private final static QName _CreateTableProperty_QNAME = new QName("", "CreateTableProperty");
    private final static QName _Url_QNAME = new QName("", "Url");
    private final static QName _ControllerName_QNAME = new QName("", "ControllerName");
    private final static QName _FolderName_QNAME = new QName("", "FolderName");
    private final static QName _TableName_QNAME = new QName("", "TableName");
    private final static QName _Id_QNAME = new QName("", "Id");
    private final static QName _CreateMapper_QNAME = new QName("", "CreateMapper");
    private final static QName _Package_QNAME = new QName("", "Package");
    private final static QName _ObjectName_QNAME = new QName("", "ObjectName");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.fpg.ec.codegen.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Table }
     * 
     */
    public Table createTable() {
        return new Table();
    }

    /**
     * Create an instance of {@link Object }
     * 
     */
    public Object createObject() {
        return new Object();
    }

    /**
     * Create an instance of {@link Page }
     * 
     */
    public Page createPage() {
        return new Page();
    }

    /**
     * Create an instance of {@link DbConnection }
     * 
     */
    public DbConnection createDbConnection() {
        return new DbConnection();
    }

    /**
     * Create an instance of {@link CodeGenConfig }
     * 
     */
    public CodeGenConfig createCodeGenConfig() {
        return new CodeGenConfig();
    }

    /**
     * Create an instance of {@link Tables }
     * 
     */
    public Tables createTables() {
        return new Tables();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CreateModel")
    public JAXBElement<String> createCreateModel(String value) {
        return new JAXBElement<String>(_CreateModel_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Type")
    public JAXBElement<String> createType(String value) {
        return new JAXBElement<String>(_Type_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Pwd")
    public JAXBElement<String> createPwd(String value) {
        return new JAXBElement<String>(_Pwd_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Author")
    public JAXBElement<String> createAuthor(String value) {
        return new JAXBElement<String>(_Author_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CreateBo")
    public JAXBElement<String> createCreateBo(String value) {
        return new JAXBElement<String>(_CreateBo_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CreateDao")
    public JAXBElement<String> createCreateDao(String value) {
        return new JAXBElement<String>(_CreateDao_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Module")
    public JAXBElement<String> createModule(String value) {
        return new JAXBElement<String>(_Module_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CreateTableProperty")
    public JAXBElement<String> createCreateTableProperty(String value) {
        return new JAXBElement<String>(_CreateTableProperty_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Url")
    public JAXBElement<String> createUrl(String value) {
        return new JAXBElement<String>(_Url_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ControllerName")
    public JAXBElement<String> createControllerName(String value) {
        return new JAXBElement<String>(_ControllerName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "FolderName")
    public JAXBElement<String> createFolderName(String value) {
        return new JAXBElement<String>(_FolderName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TableName")
    public JAXBElement<String> createTableName(String value) {
        return new JAXBElement<String>(_TableName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Id")
    public JAXBElement<String> createId(String value) {
        return new JAXBElement<String>(_Id_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CreateMapper")
    public JAXBElement<String> createCreateMapper(String value) {
        return new JAXBElement<String>(_CreateMapper_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Package")
    public JAXBElement<String> createPackage(String value) {
        return new JAXBElement<String>(_Package_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "ObjectName")
    public JAXBElement<String> createObjectName(String value) {
        return new JAXBElement<String>(_ObjectName_QNAME, String.class, null, value);
    }

}
